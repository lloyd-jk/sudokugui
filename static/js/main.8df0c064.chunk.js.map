{"version":3,"sources":["components/MainPageStyles.js","components/MainPage.js","components/SolverUtil.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","button","borderRadius","border","color","height","padding","boxShadow","centerItems","display","justifyContent","input","outline","textAlign","width","fontSize","MainPage","useState","matrix","setMatrix","flag","setFlag","range","classes","useEffect","console","log","RowComponent","row","TableRow","style","borderBottom","borderTop","map","value","TableCell","align","borderRight","borderLeft","type","className","onChange","e","col","test","target","Number","handleChange","marginTop","Table","TableBody","Button","variant","onClick","isValid","board","k","i","m","Math","floor","n","sodokoSolver","data","j","SolverUtil","Tooltip","title","fontWeight","arrow","IconButton","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8df0c064.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles({\r\n  button: {\r\n    // background: \"#007FFF\",\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  },\r\n  centerItems: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    outline: \"none\",\r\n    textAlign: \"center\",\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    padding: \"none\",\r\n    border: \"hidden\",\r\n    fontSize: \"40px\",\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SolverUtil } from \"./SolverUtil\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useStyles } from \"./MainPageStyles\";\r\n\r\nconst MainPage = () => {\r\n  const [matrix, setMatrix] = useState([\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]);\r\n  const [flag, setFlag] = useState(false);\r\n  const range = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    console.log(matrix);\r\n  }, [flag, matrix]);\r\n\r\n  const RowComponent = ({ row }) => {\r\n    function handleChange(e, col) {\r\n      const re = /^[0-9\\b]+$/;\r\n      if (re.test(e.target.value)) {\r\n        matrix[row][col] = Number(e.target.value);\r\n        setMatrix(matrix);\r\n        setFlag(!flag);\r\n      }\r\n    }\r\n    return (\r\n      <TableRow\r\n        style={\r\n          (row + 1) % 3 === 0\r\n            ? {\r\n                borderBottom: \"2px solid rgb(0, 0, 0)\",\r\n                borderRadius: \"10px\",\r\n              }\r\n            : row === 0\r\n            ? {\r\n                borderTop: \"2px solid rgb(0, 0, 0)\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        {range.map((value) => (\r\n          <TableCell\r\n            key={value}\r\n            align=\"center\"\r\n            style={\r\n              (value + 1) % 3 === 0\r\n                ? {\r\n                    border: \"1px solid grey\",\r\n                    borderRight: \"2px solid black\",\r\n                  }\r\n                : value === 0\r\n                ? {\r\n                    border: \"1px solid grey\",\r\n                    borderLeft: \"2px solid black\",\r\n                  }\r\n                : { border: \"1px solid grey\" }\r\n            }\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              className={classes.input}\r\n              value={\r\n                matrix[row][value] !== 0 && matrix[row][value] !== \"NaN\"\r\n                  ? matrix[row][value]\r\n                  : \"\"\r\n              }\r\n              onChange={(e) => {\r\n                handleChange(e, value);\r\n              }}\r\n            />\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  const solve = () => {\r\n    console.log(\"Button Pressed\");\r\n    SolverUtil(matrix, setMatrix);\r\n    setFlag(!flag);\r\n  };\r\n\r\n  const reset = () => {\r\n    let temp = [\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    ];\r\n    setMatrix(temp);\r\n    setFlag(!flag);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"55px\",\r\n      }}\r\n    >\r\n      <h1 style={{ textAlign: \"center\" }}>Sudoku Solver</h1>\r\n      <Table className={classes.centerItems} aria-label=\"simple table\">\r\n        <TableBody>\r\n          {range.map((value) => (\r\n            <RowComponent row={value} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.centerItems} style={{ marginTop: \"20px\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          onClick={solve}\r\n          style={{ borderRadius: \"20px\", width: \"200px\" }}\r\n        >\r\n          Solve\r\n        </Button>\r\n        <Tooltip\r\n          title={\r\n            <h1\r\n              style={{\r\n                fontSize: \"17px\",\r\n                fontWeight: \"normal\",\r\n              }}\r\n            >\r\n              Clear\r\n            </h1>\r\n          }\r\n          arrow\r\n        >\r\n          <IconButton aria-label=\"clear\" onClick={reset}>\r\n            <ClearIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export function SolverUtil(matrix, setMatrix) {\r\n  sodokoSolver(matrix);\r\n  console.log(\"solved\", matrix);\r\n  setMatrix(matrix);\r\n\r\n  function isValid(board, row, col, k) {\r\n    for (let i = 0; i < 9; i++) {\r\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n      const n = 3 * Math.floor(col / 3) + (i % 3);\r\n      if (board[row][i] == k || board[i][col] == k || board[m][n] == k) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function sodokoSolver(data) {\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (data[i][j] == 0) {\r\n          for (let k = 1; k <= 9; k++) {\r\n            if (isValid(data, i, j, k)) {\r\n              data[i][j] = `${k}`;\r\n              if (sodokoSolver(data)) {\r\n                return true;\r\n              } else {\r\n                data[i][j] = 0;\r\n              }\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import \"./App.css\";\nimport MainPage from \"./components/MainPage\";\n\nfunction App() {\n  return (\n    <div>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}